map(dataSrcList, "id")
map(dataSrcList, "id")=="0EcERDl5kx5l"
dataSrcList %>% map(id)
dataSrcList %>% map("id")
dataSrcList %>% detect("id")
dataSrcList %>% detect("0EcERDl5kx5l")
dataSrcList %>% keep(id="0EcERDl5kx5l")
dataSrcList %>% keep(id=="0EcERDl5kx5l")
dataSrcList %>% keep("id"=="0EcERDl5kx5l")
dataSrcList %>% keep()
dataSrcList %>% detect_index(id == "0EcERDl5kx5l")
dataSrcList %>% detect_index([id == "0EcERDl5kx5l"])
dataSrcList[id == "0EcERDl5kx5l"]
dataSrcList[[id == "0EcERDl5kx5l"]]
dataSrcList[["0EcERDl5kx5l"]]
dataSrcList$id
dataSrcList[[]]$id
dataSrcList[[1]]$id
aaaa <- data.frame(dataSrcList)
aaaa
View(aaaa)
aaaa <- as.data.frame(dataSrcList)
transmute(dataSrcList)
pluck(dataSrcList, "1")
pluck(dataSrcList, "0EcERDl5kx5l")
dataSrcList %>% map(safely(log, id = NA_real_))
aaaa <- data.frame(unlist(dataSrcList), byrow=T)
View(aaaa)
View(aaaa)
aaaa <- data.frame(unlist(dataSrcList))
aaaa <- data.frame(dataSrcList)
size(dataSrcList)
length(dataSrcList)
for(i in seq(length(dataSrcList))){
if( i$name == "0EcERDl5kx5l"){
return(i$dataSource)
}
}
for(i in seq(length(dataSrcList))){
if( i["name"] == "0EcERDl5kx5l"){
return(i["dataSource"])
}
}
seq(length(dataSrcList))
for(i in 1:length(dataSrcList)){
if( i["name"] == "0EcERDl5kx5l"){
return(i["dataSource"])
}
}
for(i in 1:length(dataSrcList)){
if( i[name] == "0EcERDl5kx5l"){
return(i["dataSource"])
}
}
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$name == "0EcERDl5kx5l"){
return(i["dataSource"])
}
}
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$name == "0EcERDl5kx5l"){
return(dataSrcList[[i]]$dataSource)
}
}
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$name == "0EcERDl5kx5l"){
print(dataSrcList[[i]]$dataSource)
return(dataSrcList[[i]]$dataSource)
}
}
dataSrcList[[1]]$name
dataSrcList[[1]]$id
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$id == "0EcERDl5kx5l"){
print(dataSrcList[[i]]$dataSource)
return(dataSrcList[[i]]$dataSource)
}
}
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$id == "0EcERDl5kx5l"){
print(dataSrcList[[i]]$dataSource)
return(dataSrcList[[i]]$dataSource)
exit()
}
}
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$id == "0EcERDl5kx5l"){
print(dataSrcList[[i]]$dataSource)
dataDir <- dataSrcList[[i]]$dataSource
exit()
}
}
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$id == "0EcERDl5kx5l"){
print(dataSrcList[[i]]$dataSource)
dataDir <- dataSrcList[[i]]$dataSource
break
}
}
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
break
runApp('app')
getNumberOfSubjects <- function( standardName, baseDir ){
if( stringr::str_detect(standardName, regex("sdtm", ignore_case = TRUE)) ){
dm <- SASxport::read.xport(paste0(baseDir, "/dm.xpt"))
res <- nrow(dm)
}
else if( stringr::str_detect(standardName, regex("adam", ignore_case = TRUE)) ){
res <- -99
}
else{
res <- -99
}
return(res)
}
getNumberOfAes <- function( standardName, baseDir ){
if( stringr::str_detect(standardName, regex("sdtm", ignore_case = TRUE)) ){
if ( file.exists(paste0(baseDir, "/ae.xpt")) ){
ae <- SASxport::read.xport(paste0(baseDir, "/ae.xpt"))
res <- nrow(ae)
}else{
res <- "AE dataset does not exist."
}
}
else if( stringr::str_detect(standardName, regex("adam", ignore_case = TRUE)) ){
return(-99)
}
else{
return(-99)
}
}
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
else if(file.exists(paste0(baseDir, "/dm.xml"))){
dm <- R4DSXML::read.dataset.xml( paste0(baseDir, "/dm.xml"), getDefineXml(baseDir))
}
runApp('app')
runApp('app')
runApp('app')
R4DSXML::getStudyMD("/Users/ippei/develop/data/cdisc/Dataset-XML_1-0/Example/Untyped_Data_Example-sdtm/define2-0-0-example-sdtm(2013-11-09).xml")
getDefineXml <- function(baseDir){
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = TRUE)
if ( length(definefilelist) > 0 ){
return( definefilelist[1] )
}
else{
return( NA )
}
}
getDefineXml("/Users/ippei/develop/data/cdisc/Dataset-XML_1-0/Example/Untyped_Data_Example-sdtm")
shiny::runApp('app')
runApp('app')
runApp('app')
getTrialSummary("/Users/ippei/develop/data/cdisc/Dataset-XML_1-0/Example/Untyped_Data_Example-sdtm/ts.xml")
runApp('app')
getDefineXml("/Users/ippei/develop/data/cdisc/Dataset-XML_1-0/Example/Untyped_Data_Example-sdtm")
R4DSXML::getDLMD( getDefineXml("/Users/ippei/develop/data/cdisc/Dataset-XML_1-0/Example/Untyped_Data_Example-sdtm") )
runApp('app')
runApp('app')
#flist <- list.files(baseDir, pattern = "//.xpt", full.names = TRUE)
flist <- list.files(baseDir, pattern = "//.xml", full.names = TRUE)
runApp('app')
runApp('app')
#flist <- list.files(baseDir, pattern = "//.xpt", full.names = TRUE)
flist <- list.files(baseDir, pattern = "\\.xml", full.names = TRUE)
runApp('app')
runApp('app')
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = TRUE)
View(dataSrcList)
baseDir
definefilelist
flist <- list.files(baseDir, pattern = "\\.xml", full.names = TRUE)
flist
definefilelist - fflist
definefilelist - flist
definefilelist[-flist]
setdiff(definefilelist, flist)
setdiff(flist, definefilelist)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
dm <- R4DSXML::read.dataset.xml( paste0(baseDir, "/dm.xml"), paste0(baseDir, etDefineXml(baseDir)))
dm <- R4DSXML::read.dataset.xml( paste0(baseDir, "/dm.xml"), paste0(baseDir, getDefineXml(baseDir)))
runApp('app')
list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = FALSE)
getDefineXml <- function(baseDir){
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = FALSE)
print(definefilelist)
if ( length(definefilelist) > 0 ){
return( definefilelist[1] )
}
else{
return( NA )
}
}
getDataDir(baseDir)
baseDir
baseDir <- "/Users/ippei/develop/data/cdisc/Dataset-XML_1-0/Example/Untyped_Data_Example-sdtm"
getDataDir(baseDir)
getDefineXml <- function(baseDir){
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = TRUE)
print(definefilelist)
if ( length(definefilelist) > 0 ){
return( definefilelist[1] )
}
else{
return( NA )
}
}
getDataDir(baseDir)
getDefineXml
getDefineXml(baseDir)
getDefineXml <- function(baseDir){
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = FALSE)
print(definefilelist)
if ( length(definefilelist) > 0 ){
return( definefilelist[1] )
}
else{
return( NA )
}
}
getDefineXml(baseDir)
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
str_sub("hello project", -4)
runApp('app')
runApp('app')
getDataDir <- function(studySpaceId){
yamlPath <- paste0(path.expand("~"), "/.douhau-data-studio/data-src-list.yaml")
dataSrcList <- read_yaml(yamlPath)
dataDir <- ""
for(i in 1:length(dataSrcList)){
if( dataSrcList[[i]]$id == studySpaceId){
dataDir <- dataSrcList[[i]]$dataSource
}
}
return(dataDir)
}
getNumberOfSubjects <- function( standardName, baseDir ){
if( stringr::str_detect(standardName, regex("sdtm", ignore_case = TRUE)) ){
if(file.exists( paste0(baseDir, "/dm.xpt"))){
dm <- SASxport::read.xport(paste0(baseDir, "/dm.xpt"))
res <- nrow(dm)
}
else if(file.exists(paste0(baseDir, "/dm.xml"))){
dm <- R4DSXML::read.dataset.xml( paste0(baseDir, "/dm.xml"), paste0(baseDir, "/", getDefineXml(baseDir)))
res <- nrow(dm)
}
}
else if( stringr::str_detect(standardName, regex("adam", ignore_case = TRUE)) ){
res <- -99
}
else{
res <- -99
}
return(res)
}
getNumberOfAes <- function( standardName, baseDir ){
if( stringr::str_detect(standardName, regex("sdtm", ignore_case = TRUE)) ){
if(file.exists( paste0(baseDir, "/ae.xpt"))){
ae <- SASxport::read.xport(paste0(baseDir, "/ae.xpt"))
res <- nrow(ae)
}
else if(file.exists(paste0(baseDir, "/ae.xml"))){
ae <- R4DSXML::read.dataset.xml( paste0(baseDir, "/ae.xml"), paste0(baseDir, "/", getDefineXml(baseDir)))
res <- nrow(ae)
}
else{
res <- "AE dataset does not exist."
}
}
else if( stringr::str_detect(standardName, regex("adam", ignore_case = TRUE)) ){
return(-99)
}
else{
return(-99)
}
}
getNumberOfDeaths <- function( standardName, baseDir ){
if( stringr::str_detect(standardName, regex("sdtm", ignore_case = TRUE)) ){
if(file.exists( paste0(baseDir, "/dm.xpt"))){
dm <- SASxport::read.xport(paste0(baseDir, "/dm.xpt"))
}
else if(file.exists(paste0(baseDir, "/dm.xml"))){
dm <- R4DSXML::read.dataset.xml( paste0(baseDir, "/dm.xml"), paste0(baseDir, "/", getDefineXml(baseDir)))
}
if (exists("dm")){
if ("DTHFL" %in% names(dm)){
res <- dm %>%
dplyr::filter( DTHFL=="Y" ) %>%
dplyr::count()
}else{
res <- "DTHFL variable does not exist."
}
}
else {
res <- "error"
}
}
else if( stringr::str_detect(standardName, regex("adam", ignore_case = TRUE)) ){
return(-99)
}
else{
return(-99)
}
}
getDatasetFileInfo <- function( baseDir ){
#flist_ <- list.files(baseDir, pattern = "//.xpt", full.names = TRUE)
flist_ <- list.files(baseDir, pattern = "\\.xml", full.names = TRUE)
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = TRUE)
flist <- setdiff(flist_, definefilelist)
if (length(flist) > 0){
res  <- file.info(flist) %>%
tibble::rownames_to_column(var = "rowname") %>%
dplyr::select(rowname, size, mtime) %>%
dplyr::mutate(rowname = basename(rowname)) %>%
dplyr::mutate(size = R.utils::hsize(size)) %>%
dplyr::mutate(mtime = format(mtime)) %>%
dplyr::rename(Name=rowname, Size=size, Created=mtime)
}else{
res <- c("A dataset file is not found.")
}
return(res)
}
getTrialSummary <- function( baseDir ){
if(file.exists( paste0(baseDir, "/ts.xpt"))){
ts <- SASxport::read.xport(paste0(baseDir, "/ts.xpt"))
}
else if(file.exists(paste0(baseDir, "/ts.xml"))){
ts <- R4DSXML::read.dataset.xml( paste0(baseDir, "/ts.xml"), paste0(baseDir, "/", getDefineXml(baseDir)))
}
if(exists("ts")){
res  <- ts %>%
dplyr::select(TSPARM, TSVAL) %>%
dplyr::rename(Key=TSPARM, Value=TSVAL)
}else{
res <- "TS dataset does not exist."
}
return(res)
}
getDatasetMetadata <- function( baseDir ){
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = TRUE)
if ( length(definefilelist) == 0 ){
return("Error: Define.xml is not found.")
}else{
definexml <- definefilelist[1]
datasetMetadata <- R4DSXML::getDLMD(definexml) %>%
select(c(IGD_SASDatasetName, IGD_Description, IGD_Class, IGD_Structure))
return(datasetMetadata)
}
}
getDefineXml <- function(baseDir){
definefilelist <-  list.files(baseDir, pattern = ".*define.*\\.xml$", full.names = FALSE)
print(definefilelist)
if ( length(definefilelist) > 0 ){
return( definefilelist[1] )
}
else{
return( NA )
}
}
# return the full file path as string
getStudyInfo <- function( baseDir ){
defineXml <- getDefineXml( baseDir )
if ( is.na(defineXml) == FALSE ){
studyMD <- R4DSXML::getStudyMD( paste0(baseDir, "/", defineXml))
if ( studyMD["StandardName"] == "SDTM-IG") {
modelName <- "SDTM"
names(modelName) <- "ModelName"
studyMD <- c(studyMD, modelName)
}
}
return(studyMD)
}
#' Get dataset file list under basedir
#'
#' @param basedir A string
#' @return file list as string vector
getDatasetFileList <- function(baseDir){
definefilelist <- getDefineXml(baseDir)
xptflist_ <- list.files(baseDir, pattern = "//.xpt", full.names = FALSE)
xmlflist_ <- list.files(baseDir, pattern = "\\.xml", full.names = FALSE)
if(length(xptflist_) > 0 && length(xmlflist_) == 0){
#xpt
return(xptflist_)
}else if(length(xptflist_) == 0 && length(xmlflist_) > 0){
#xml
flist <- setdiff(xmlflist_, definefilelist)
return(flist)
}
}
#' Get dataset
#'
#' @param baseDir A string of base directory
#' @param file A string of file name without directory path
#' @return dataset as an R dataframe
getDataset <- function(baseDir, filename){
definefilelist <- getDefineXml(baseDir)
if ( stringr::str_sub(filename) == ".xpt" ){
df <- SASxport::read.xport(paste0(baseDir, filename))
return(df)
}else if ( stringr::str_sub(filename) == ".xml" ){
df <- R4DSXML::read.dataset.xml( paste0(baseDir, "/", filename), paste0(baseDir, "/", getDefineXml(baseDir)))
return(df)
}
}
getDataset(baseDir, "dm.xml"),
getDataset(baseDir, "dm.xml")
getDataset <- function(baseDir, filename){
definefilelist <- getDefineXml(baseDir)
if ( stringr::str_sub(filename) == ".xpt" ){
df <- SASxport::read.xport(paste0(baseDir, filename))
return(df)
}else if ( stringr::str_sub(filename) == ".xml" ){
df <- R4DSXML::read.dataset.xml( paste0(baseDir, "/", filename), paste0(baseDir, "/", getDefineXml(baseDir)))
print("ok")
return(df)
}
}
}
getDataset <- function(baseDir, filename){
definefilelist <- getDefineXml(baseDir)
if ( stringr::str_sub(filename) == ".xpt" ){
df <- SASxport::read.xport(paste0(baseDir, filename))
return(df)
}else if ( stringr::str_sub(filename) == ".xml" ){
df <- R4DSXML::read.dataset.xml( paste0(baseDir, "/", filename), paste0(baseDir, "/", getDefineXml(baseDir)))
print("ok")
return(df)
}
}
getDataset(baseDir, "dm.xml")
getDataset <- function(baseDir, filename){
definefilelist <- getDefineXml(baseDir)
if ( stringr::str_sub(filename, -4) == ".xpt" ){
df <- SASxport::read.xport(paste0(baseDir, filename))
return(df)
}else if ( stringr::str_sub(filename, -4) == ".xml" ){
df <- R4DSXML::read.dataset.xml( paste0(baseDir, "/", filename), paste0(baseDir, "/", getDefineXml(baseDir)))
print("ok")
return(df)
}
}
getDataset(baseDir, "dm.xml")
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
getDatasetFileList <- function(baseDir){
definefilelist <- getDefineXml(baseDir)
xptflist_ <- list.files(baseDir, pattern = "\\.xpt", full.names = FALSE)
xmlflist_ <- list.files(baseDir, pattern = "\\.xml", full.names = FALSE)
if(length(xptflist_) > 0 ){
#xpt
return(xptflist_)
}else if(length(xptflist_) == 0 && length(xmlflist_) > 0){
#xml
flist <- setdiff(xmlflist_, definefilelist)
return(flist)
}
}
baseDir <- "/Users/ippei/develop/data/cdisc/sdtm"
getDatasetFileList(baseDir)
xptflist_ <- list.files(baseDir, pattern = "\\.xpt", full.names = FALSE)
list.files(baseDir, pattern = "\\.xpt", full.names = FALSE)
length(xptflist_)
runApp('app')
shiny::runApp('app')
runApp('app')
runApp('app')
runApp('app')
